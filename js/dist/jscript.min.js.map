{"version":3,"sources":["jscript.js"],"names":["ul","document","querySelector","btn","getElementById","e","addEventListener","addInput","value","li","createElement","firstPar","secondPar","firstIcon","secondIcon","input","style","padding","color","className","textContent","appendChild","display","parText","target","parentNode","note","previousElementSibling","nextElementSibling","keyCode","console","log","removeChild","classList","list","hideNotes","checked"],"mappings":"aACA,IAAIA,GAAKC,SAASC,cAAc,MADhCC,IAAAF,SAAAG,eAAA,WAEAD,IAAIA,iBAAeC,QAAAA,SAAeC,GAE9BC,EAAAA,iBAGA,IAAIC,EAAWN,SAASG,eAAe,aAGvC,GAAA,KAAIG,EAASC,MAAc,CAEnBC,IAAEA,EAAGR,SAASS,cAAT,MACLC,EAAWV,SAASS,cADxB,KAEIE,EAAYX,SAASS,cAFzB,KAGIG,EAAYZ,SAASS,cAHzB,KAIII,EAAab,SAASS,cAJ1B,KAKIK,EAAQd,SAASS,cAAc,SAEnCG,EAAUG,MAAMC,QAAU,YAC1BJ,EAAUG,MAAME,MAAQ,MAIxBL,EAAUM,UAAY,qCACtBJ,EAAMI,UAAY,oBAClBR,EAASQ,UAAY,cAArBR,EAASQ,UAAY,OAGrBR,EAASS,aAAcb,OAAQ,QAA/BI,EAASS,YAAcb,EAASC,MAK7Ba,EAAHA,YAAAR,GACGQ,EAAHA,YAAAP,GACGO,EAAAA,YAAYN,GACZM,EAAAA,YA3BoBT,GA0BvBH,EAAGY,YAAYN,GAIfR,GAAAA,YAAAE,GAMRF,EAAAC,MAAA,MAGAR,GAAGM,iBAAiB,QAAS,SAASD,GAa9BU,GAAA,qBAAAA,EAAMC,OAAMM,UAAU,GAAtB,CAPA,IAAIC,EAAUlB,EAAEmB,OAAOC,WAWvBV,EAAMT,MAAAA,QAAiB,OAGX,IAAAoB,EAAAH,EAAAI,uBACAD,EAAKN,EAALQ,mBAEAb,EAAAA,MAAMC,QAAN,QACHD,EALDP,MAKOkB,EAAAN,YAGNL,EAAAT,iBAAA,WAAA,SAAAD,GACJ,GAAA,KAAAA,EAAAwB,QAXL,GAAA,KAAAd,EAAAP,MAgBAkB,EAAAN,YAAAL,EAAAP,MACAsB,QAAAC,IAAAL,EAAAN,aACaI,EAAOC,MAAAA,QAAWA,YACfO,CACnB,IAAAvB,EAAAM,EAAAU,WAILhB,EAAAgB,WAAAO,YAAAvB,WAOK,GAAA,aAAAJ,EAAAmB,OAAAS,UAAA,GAAA,CAbG,IAAIC,EAAO7B,EAAEmB,OAAOC,WAAWA,WAC/BS,EAAKT,WAAWO,YAAYE,MAQpC,IAAIC,UAAYlC,SAASC,cAAc,oBACvCiC,UAAU7B,iBAAiB,QAAS,SAASD,GACrC8B,UAAUC,UACVpC,GAAGgB,MAAMM,QAAU","file":"jscript.min.js","sourcesContent":["// //accessing the ul element\r\nvar ul = document.querySelector('ul');\r\nvar btn = document.getElementById('add-btn');\r\n\r\nbtn.addEventListener('click', function(e) {\r\n    e.preventDefault();\r\n    //     //Accessing input from the form element add\r\n    var addInput = document.getElementById('add-input');\r\n\r\n    //     //check to make sure no empty input is submitted.\r\n    if (addInput.value !== '') {\r\n        // we need to create new element tag as li\r\n        var li = document.createElement('li'),\r\n            firstPar = document.createElement('p'),\r\n            secondPar = document.createElement('p'),\r\n            firstIcon = document.createElement('i'),\r\n            secondIcon = document.createElement('i'),\r\n            input = document.createElement('input');\r\n        //styling the icon\r\n        firstIcon.style.padding = '10px 10px';\r\n        firstIcon.style.color = \"red\";\r\n\r\n        //assign each element the class attributes to the new created element\r\n        secondIcon.className = \"fa-sharp fa-solid fa-pen-to-square\";\r\n        firstIcon.className = \"fa-solid fa-xmark\";\r\n        input.className = '\"edit-note\"';\r\n        firstPar.className = \"text\";\r\n        //setAttribute for addInput\r\n        input.setAttribute('type', 'text');\r\n        firstPar.textContent = addInput.value;\r\n\r\n        //Now let assign the each newest tag element to their parent element\r\n        secondPar.appendChild(firstIcon);\r\n        secondPar.appendChild(secondIcon);\r\n        li.appendChild(firstPar);\r\n        li.appendChild(secondPar);\r\n        li.appendChild(input);\r\n        ul.appendChild(li);\r\n\r\n        //make sure not text should appear on the input text after it been added \r\n        addInput.value = ''\r\n    }\r\n});\r\n\r\n\r\n// // ========================Working on Edit notes==================================\r\n// //using the ul in the gobal execution context\r\n\r\n\r\nul.addEventListener('click', function(e) {\r\n    //accessing the delete obj in the class using class attribute and make sure that \r\n    //it only click that particular object\r\n\r\n    if (e.target.classList[2] === 'fa-pen-to-square') {\r\n        // need to access the parent tag hold fa-pen-to-square tag  \r\n        var parText = e.target.parentNode;\r\n        parText.style.display = 'none'\r\n\r\n        // accessing the tag before this current tag also after the current tage\r\n        var note = parText.previousElementSibling;\r\n        var input = parText.nextElementSibling;\r\n        //grab the text in the input and sign to note\r\n        input.style.display = 'block';\r\n        input.value = note.textContent;\r\n\r\n        // THE TEXT IN INPUT CAN NOW BE SUBMITED TO THE NOTES ONCE KEYPRESS IS RELESASED\r\n        input.addEventListener('keypress', function(e) {\r\n            if (e.keyCode === 13) {\r\n                if (input.value !== '') {\r\n                    //assign the note to the input element\r\n                    note.textContent = input.value;\r\n                    console.log(note.textContent)\r\n                    input.style.display = 'block'\r\n                } else {\r\n                    var li = input.parentNode;\r\n                    li.parentNode.removeChild(li);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    } else if (e.target.classList[1] === 'fa-xmark') {\r\n        // console.log('Please select')\r\n        //remove the list tag once keyboard enter is being pressed\r\n        var list = e.target.parentNode.parentNode;\r\n        list.parentNode.removeChild(list);\r\n    }\r\n\r\n});\r\n\r\n//===============Hide Notes=================================\r\n\r\n\r\nvar hideNotes = document.querySelector('#hide-list input')\r\nhideNotes.addEventListener('click', function(e) {\r\n    if (hideNotes.checked) {\r\n        ul.style.display = 'none'\r\n    }\r\n\r\n})"]}